$KBUpdatesByOS = @{
    "Windows Server 2012 R2" = @("KB4601384", "KB4601349");
    "Windows Server 2012" = @("KB4601348", "KB4601357");
    "Windows Server 2008 R2 SP1" = @("KB4601347", "KB4601363");
    "Windows Server 2016" = @("KB4601318");
    "Windows Server 2019" = @("KB4601345");
    "Windows Server 20H2" = @("KB4601319");
    "Windows Server 1903" = @("KB4565351");
    "Windows Server 1909" = @("KB4601315");
    "Windows Server 2004" = @("KB4601319");
}

# Function to get the current OS name
function Get-OSName {
    $os = Get-CimInstance -ClassName Win32_OperatingSystem
    $caption = $os.Caption
    return $caption
}

# Function to check if the updates are installed
function Check-Updates {
    param (
        [string[]]$KBUpdates
    )
    
    $installedUpdates = Get-HotFix | Select-Object -ExpandProperty HotFixID
    
    $missingUpdates = @()
    foreach ($kb in $KBUpdates) {
        if ($kb -notin $installedUpdates) {
            $missingUpdates += $kb
        }
    }

    if ($missingUpdates.Count -eq 0) {
        Write-Output "All specified updates are installed."
    } else {
        Write-Output "Missing updates: $($missingUpdates -join ", ")"
    }
}

# Main script
$osName = Get-OSName
Write-Output "Detected OS: $($osName)"

if ($KBUpdatesByOS.ContainsKey($osName)) {
    $updatesToCheck = $KBUpdatesByOS[$osName]
    Write-Output \"Checking updates for $($osName): $($updatesToCheck -join ", ")\"
    Check-Updates -KBUpdates $updatesToCheck
} else {
    Write-Output "No updates specified for the detected OS: $osName"
}
