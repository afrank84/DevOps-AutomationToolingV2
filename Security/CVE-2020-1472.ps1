# Path to the text file containing the list of computers
$ComputerListFile = ".\ComputerList.txt"

# Read the list of target computers from the text file
if (Test-Path $ComputerListFile) {
    $TargetComputers = Get-Content -Path $ComputerListFile
} else {
    Write-Error "The computer list file does not exist at: $ComputerListFile"
    return
}

# Define KB updates for specific OS versions
$KBUpdatesByOS = @{
    "Windows Server 2012 R2" = @("KB4601384", "KB4601349");
    "Windows Server 2012" = @("KB4601348", "KB4601357");
    "Windows Server 2008 R2 SP1" = @("KB4601347", "KB4601363");
    "Windows Server 2016" = @("KB4601318");
    "Windows Server 2019" = @("KB4601345");
    "Windows Server 20H2" = @("KB4601319");
    "Windows Server 1903" = @("KB4565351");
    "Windows Server 1909" = @("KB4601315");
    "Windows Server 2004" = @("KB4601319");
}

# Function to check KB updates
function Check-KBUpdates {
    param (
        $KBUpdates,
        $ComputerName
    )

    # Get installed KBs
    $InstalledKBs = Get-HotFix -ComputerName $ComputerName -ErrorAction SilentlyContinue | Select-Object -ExpandProperty HotFixID

    # Compare against required KBs
    $Results = @()
    foreach ($KB in $KBUpdates) {
        $Status = if ($InstalledKBs -contains $KB) { "Installed" } else { "Not Installed" }
        $Results += [PSCustomObject]@{
            ComputerName = $ComputerName
            KB           = $KB
            Status       = $Status
        }
    }
    return $Results
}

# Invoke-Command to check KB updates on all computers
Invoke-Command -ComputerName $TargetComputers -ScriptBlock {
    param($KBUpdatesByOS)

    # Detect OS
    $OS = (Get-CimInstance Win32_OperatingSystem).Caption
    $OS = $OS -replace "Microsoft ", ""

    # Get KB updates for the OS
    if ($KBUpdatesByOS.ContainsKey($OS)) {
        $RequiredKBs = $KBUpdatesByOS[$OS]
        return Check-KBUpdates -KBUpdates $RequiredKBs -ComputerName $env:COMPUTERNAME
    } else {
        return [PSCustomObject]@{
            ComputerName = $env:COMPUTERNAME
            Message      = "OS not in KB mapping"
        }
    }
} -ArgumentList $KBUpdatesByOS
